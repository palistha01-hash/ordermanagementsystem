name: Authentication
description: ''
endpoints:
  -
    custom: []
    httpMethods:
      - POST
    uri: api/register
    metadata:
      custom: []
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a new user'
      description: 'Creates a new user account and returns an authentication token.'
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        custom: []
        name: name
        description: 'The full name of the user.'
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      email:
        custom: []
        name: email
        description: 'The email address of the user. Must be unique.'
        required: true
        example: johndoe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      password:
        custom: []
        name: password
        description: 'The password (8–15 characters, must include at least one uppercase letter and one number).'
        required: true
        example: MyPass123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
    cleanBodyParameters:
      name: 'John Doe'
      email: johndoe@example.com
      password: MyPass123
    fileParameters: []
    responses:
      -
        custom: []
        status: 201
        content: |-
          {
            "user": {
              "id": 1,
              "name": "John Doe",
              "email": "johndoe@example.com",
              "created_at": "2025-10-29T12:00:00Z"
            },
            "token": "1|abc123xyz456tokenexample"
          }
        headers: []
        description: ''
      -
        custom: []
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "email": ["The email has already been taken."]
            }
          }
        headers: []
        description: ''
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - POST
    uri: api/login
    metadata:
      custom: []
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Login user'
      description: 'Authenticates a user and returns an access token.'
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        custom: []
        name: email
        description: 'The registered email of the user.'
        required: true
        example: johndoe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      password:
        custom: []
        name: password
        description: 'The user’s password.'
        required: true
        example: MyPass123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
    cleanBodyParameters:
      email: johndoe@example.com
      password: MyPass123
    fileParameters: []
    responses:
      -
        custom: []
        status: 200
        content: |-
          {
            "user": {
              "id": 1,
              "name": "John Doe",
              "email": "johndoe@example.com"
              "email_verified_at": null,
              "created_at": "2025-10-29T02:14:22.000000Z",
              "updated_at": "2025-10-29T02:14:22.000000Z"
            },
            "token": "1|abc123xyz456tokenexample"
          }
        headers: []
        description: ''
      -
        custom: []
        status: 422
        content: |-
          {
            "message": "The provided credentials are incorrect.",
            "errors": {
              "email": ["The provided credentials are incorrect."]
            }
          }
        headers: []
        description: ''
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      custom: []
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Logout user'
      description: 'Revokes the currently active access token for the authenticated user.'
      authenticated: true
      deprecated: false
    headers:
      Authorization: 'Bearer {token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        custom: []
        status: 200
        content: |-
          {
            "message": "Logged out"
          }
        headers: []
        description: ''
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
